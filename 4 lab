//1 часть 12 номер
            Random random = new Random();
            int[,] matrix = new int[6, 7];
            int s;
            int strok = 6;
            int stolbec = 7;
            
            
                for (int i = 0; i < 6; i++)
                {
                    for (int j = 0; j < 7; j++)
                    {
                        matrix[i, j] = random.Next(1, 100);
                    }
                }
            
            Console.WriteLine("Вывод  исходной матрицы:");
            Console.WriteLine();
            for (int i = 0; i < 6; i++)
            {
                for (int j = 0; j < 7; j++)
                {
                    Console.Write("{0:d} ", + matrix[i, j]);
                }
                Console.WriteLine();
            }
            int max = 0; ;
            int much_max = 0;
            int imax = 0;
            int jmax = 0;
            int imax_much = 0;
            int jmax_much = 0;
            for (int i = 0; i < 6; i++)
            {


                
                for (int j = 0; j < 7; j++)
                {
                    
                    if (matrix[i, j] > max )
                    {
                        max = matrix[i, j];
                        imax = i;
                        jmax = j;
                        
                    }
                   


                }
                if (max > much_max)
                {
                    much_max = max;
                    imax_much = imax;
                    jmax_much = jmax;

                }

              

            }
            Console.WriteLine("Максимальный элемент:" + much_max);
            Console.WriteLine();
            int sdvig = imax_much;
            strok = strok - 1;
              
            for (int i = sdvig; i < strok; i++)
            {
                for (int j = 0; j < 7; j++)
                {
                    matrix[i, j] = matrix[i + 1, j];
                }
            }
            Console.WriteLine();
            for (int i = 0; i < 6; i++)
            {
                for (int j  = jmax_much; j < 7 - 1; j++)
                {
                    matrix[i,j] = matrix[i, j + 1];
                }
            }
            Console.WriteLine("Вывод обработанной матрицы");
            Console.WriteLine();
            for (int i = 0; i < 6 - 1; i++)
            {
                for (int j = 0; j < 7 - 1; j++)
                {
                    Console.Write("{0:d} ", + matrix[i,j]);
                }
                Console.WriteLine();
            }
            
            
            
            
             //1 часть 17 номер
            Console.Write("Введите кол-во строк: ");
            string str = Console.ReadLine();
            Console.WriteLine();
            Console.Write("Введите кол-во столбцов: ");
            string stolb = Console.ReadLine();
            int s, f;
            int stolbs, stroks;
            Random random = new Random();
            bool res = int.TryParse(str, out s);
            bool res_stolb = int.TryParse(stolb, out f);
            if (res && res_stolb)
            {
                stroks = s;
                stolbs = f;
            }
            else
            {
                Console.WriteLine("Incorrect values");
                return;
                    
            }
            
            int[,] matrix_B = new int[stroks,stolbs];
            for (int i = 0; i < stroks; i++)
            {
                for (int j = 0; j < stolbs; j++)
                {
                    
                    matrix_B[i,j] = random.Next(1, 9);
                }
            }
            Console.WriteLine("Вывод исходной матрицы");
            for (int i = 0; i < stroks; i++)
            {
                for (int j = 0; j < stolbs; j++)
                {

                    Console.Write("{0:d} ", matrix_B[i,j]); 
                }
                Console.WriteLine();
            }
            int[,] C = new int[2,stroks];
            int index = 0;
            for (int i = 0; i < stroks; i++)
            {
                int min = matrix_B[i, 0];
                int imin = 0;
                for (int  j = 0;  j < stolbs;  j++)
                {
                    if (matrix_B[i, j] < min)
                    {
                        min = matrix_B[i, j];
                        imin = j;
                    }
                   
                }
                C[0,index] = min;
                C[1, index] = imin;
                index += 1;
               
            }
            Console.WriteLine("вывод массива C");
            
            for (int i = 0; i < 2; i++)
            {
                for (int j = 0; j < stroks; j++)
                {
                    Console.Write(C[i,j] + " ");
                }
                Console.WriteLine();
                
            }
            int temp = 0;
            for (int i = 0; i < stroks; i++)
            {
               
                for (int j = C[1,temp]; j > 0; j--)
                {
                    matrix_B[i, j] = matrix_B[i, j - 1];

                }
                matrix_B[i, 0] = C[0, temp];
                temp += 1;

            }
            Console.WriteLine();
            Console.WriteLine("Вывод матрицы");
            for (int i = 0; i < stroks; i++)
            {
                for (int j = 0; j < stolbs; j++)
                {
                    Console.Write("{0:d} ", matrix_B[i, j]);
                }
                Console.WriteLine();
            }
            Console.ReadLine();
            Console.ReadLine();
            
            
            
            
            using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _4_лаба_3_часть
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //3 часть 1 номер
            Random random = new Random();
            int[,] F = new int[7, 5];
            for (int i = 0; i < 7; i++)
            {
                for (int j = 0; j < 5; j++)
                {
                    F[i, j] = random.Next(-60, 60);
                }
            }
            Console.WriteLine("Вывод исходной матрицы");
            for (int i = 0; i < 7; i++)
            {
                for (int j = 0; j < 5; j++)
                {
                    Console.Write("{0:d} ", F[i, j]);
                }
                Console.WriteLine();
            }
            int imax_otv = 0;


            int n = 0;
            do
            {
             
                for (int j = 0; j < 5; j++)
                {

                    for (int k = 0; k < 5; k++)
                    {
                        if (F[n, j] > F[n, k])
                        {
                            int temp = F[n, j];
                            F[n, j] = F[n, k];
                            F[n, k] = temp;
                        }
                    }

                }
                n += 1;

            } while (n != 7);

            Console.WriteLine("вывод упорядоченной матрицы");
            for (int i = 0; i < 7; i++)
            {
                for (int j = 0; j < 5; j++)
                {
                    Console.Write("{0:d} ", F[i,j]);
                }
                Console.WriteLine();
            }
            int[,] C = new int[2, 7];
           
            int l = 0;
            for (int i = 0; i < 7 && l < 7; i++)
            {

                C[0, l] = F[i, 4];
                C[1, l] = i;
                l += 1;

            }
            Console.WriteLine("Вывод  исходного массива C");
            for (int i = 0; i < 2; i++)
            {
                for (int j = 0; j < 7; j++)
                {
                    Console.Write("{0:d} ", C[i, j]);
                }
                Console.WriteLine();
            }
            
                for (int j = 0; j < 7; j++)
                {
                    for (int f = 0; f < 7; f++)
                    {
                        if (C[0, j] > C[0, f])
                        {
                            int temp = C[0, j];
                            C[0, j] = C[0, f];

                            C[0, f] = temp;
                            int jtemp = C[1, j];
                            C[1, j] = C[1, f];
                            C[1, f] = jtemp;

                        }
                    }
                }
            
            Console.WriteLine("Вывод отредактированного массива С");
            for (int i = 0; i < 2; i++)
            {
                for (int j = 0; j < 7; j++)
                {
                    Console.Write("{0:d} ", C[i, j]);
                }
                Console.WriteLine();
            }


            
            int[,] new_matrix = new int[7, 5];
            for (int ii = 0, i = 0; i < 7 && ii < 7; ii++, i++)
            {
               
                for (int j = 0; j < 5; j++)
                {

                    new_matrix[i, j] = F[C[1,ii], j];
                }
            }
            Console.WriteLine("вывод  матрицы (new_matrix)");
            for (int i = 0; i < 7; i++)
            {
                for (int j = 0; j < 5; j++)
                {
                    Console.Write("{0:d} ", new_matrix[i, j]);
                }
                Console.WriteLine();

            }
            Console.Read();

        }
    }
}



using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace _10_задание_3_часть
{
    internal class Program
    {
        static void Main(string[] args)
        {
            //8 задание 3 часть
            Random r = new Random();
            Console.Write("введите кол-во строк: ");
            string stroks = Console.ReadLine();
            Console.WriteLine();
            Console.Write("введите кол-во столбцов: ");
            string stolbs = Console.ReadLine();
            int strok;
            int stolb;
            bool val = int.TryParse(stroks, out strok);
            bool l = int.TryParse(stolbs, out stolb);
            int[,] a;
            if (val && l)
            {
                a = new int[strok, stolb];
            }
            else
            {
                Console.WriteLine("что-то не так");
                return;
            }
            for (int i = 0; i < a.GetLength(0); i++)
            {
                for (int j = 0; j < a.GetLength(1); j++)
                {
                    a[i, j] = r.Next(-30, 40);
                }
            }
            Console.WriteLine("Вывод исходной матрицы");
            for (int i = 0; i < a.GetLength(0); i++)
            {
                for (int j = 0; j < a.GetLength(1); j++)
                {
                    Console.Write(a[i, j] + " ");
                }
                Console.WriteLine();
            }
            int count = 0;
            int imax = 0;
            int[,] C = new int[2, strok];
            int index_C = 0;
            for (int i = 0; i < a.GetLength(0); i++)
            {
                count = 0;
                for (int j = 0; j < a.GetLength(1); j++)
                {
                    imax = i;
                    if (a[i, j] > 0)
                    {
                        count++;
                    }
                }
                C[0, index_C] = count;
                C[1, index_C] = imax;
                index_C += 1;
            }
            Console.WriteLine("Вывод матрицы C");
            for (int i = 0; i < 2; i++)
            {
                for (int j = 0; j < strok; j++)
                {
                    Console.Write(C[i, j] + " ");
                }
                Console.WriteLine();
            }
            int n = 0;
            do
            {


                for (int j = 0; j < C.GetLength(1); j++)
                {
                    for (int f = j; f < C.GetLength(1); f++)
                    {
                        if (C[n, f] > C[n, j])
                        {
                            int temp = C[n, j];
                            C[n, j] = C[n, f];
                            C[n, f] = temp;
                            int i_temp = C[n + 1, j];
                            C[n + 1, j] = C[n + 1, f];
                            C[n + 1, f] = i_temp;


                        }
                    }
                }
                n += 1;
            } while (n != 1);
            Console.WriteLine("Вывод отредактированного двухмерного массива С");
            for (int i = 0; i < 2; i++)
            {
                for (int j = 0; j < strok; j++)
                {
                    Console.Write(C[i,j] + " ");
                }
                Console.WriteLine();
            }
            int[,] new_matrix = new int[strok, stolb];
            for (int i = 0; i < a.GetLength(0); i++)
            {
                for (int j = 0; j < a.GetLength(1); j++)
                {
                    new_matrix[i, j] = a[C[1,i],j];
                }
            }
            Console.WriteLine("Вывод матрицы new_matrix");
            for (int i = 0; i < strok; i++)
            {
                for (int j = 0; j < stolb; j++)
                {
                    Console.Write(new_matrix[i,j] + " ");
                }
                Console.WriteLine();
            }
            Console.ReadLine();



        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _3_часть_11_номер
{
    internal class Program
    {
        //3 часть 11 номер
        static void Main(string[] args)
        {
            //3 part task 11
            string s = Console.ReadLine();
            int kol;
            int[,] a;
            bool rtu = int.TryParse(s, out kol);
            if (rtu)
            {
                a = new int[kol, kol];
            }
            else
            {
                Console.WriteLine("что-то неверно");
                return;
            }
            for (int i = 0; i < kol; i++)
            {
                for (int j = 0; j < kol; j++)
                {
                    Console.Write($"Введите значение элемента в строке {i + 1} и  столбце {j + 1}: ");
                    string ml = Console.ReadLine();
                    int f;
                    bool val = int.TryParse(ml, out f);
                    if (val)
                    {
                        a[i, j] = f;
                    }
                    else
                    {
                        Console.WriteLine("неверный ввод");
                        return;
                    }
                }
            }
            Console.WriteLine("Вывод исходной матрицы");
            for (int i = 0; i < kol; i++)
            {
                for (int j = 0; j < kol; j++)
                {
                    Console.Write(a[i,j] + " ");
                }
                Console.WriteLine();
            }
            
            int index = 0;
            int c = 0;
            for (int i = 0; i < kol; i++)
            {
                for (int j = 0; j < kol; j++)
                {
                    if (a[i, j] == 0)
                    {
                        c += 1;
                        
                        
                    }
                }
            }
            if (c == kol)
            {
                Console.WriteLine("выводить нечего");
                return;
            }
            if (c == 0)
            {
                Console.WriteLine("нулевых элементов нет");
                for (int i = 0; i < kol; i++)
                {
                    for (int j = 0; j < kol; j++)
                    {
                        Console.Write(a[i,j] + " ");
                    }
                }
                return;
                Console.ReadLine();
            }
            int[] C = new int[c];
            do
            {
                for (int i = 0; i < kol; i++)
                {
                    for (int j = 0; j < kol; j++)
                    {
                        if (a[i, j] == 0)
                        {
                            C[index++] = i;
                        }
                    }
                    
                }
            } while (index < C.Length);
            Console.WriteLine("Вывод массива C");
            for (int i = 0; i < C.Length; i++)
            {
                Console.Write(C[i] + " ");
            }
            Console.WriteLine();
            int temp = 0;
            int l = 1;
            do
            {
                for (int i = C[temp]; ((i < kol - l) && temp < C.Length); i++)
                {
                    for (int j = 0; j < kol; j++)
                    {
                        a[i, j] = a[i + 1, j];
                    }
                    temp += 1;
                }
                l += 1;
            } while (l != c);
            Console.WriteLine("Вывод обработанной матрицы");
            for (int i = 0; i < kol - c; i++)
            {
                for (int j = 0; j < kol; j++)
                {
                    Console.Write(a[i,j] + " ");
                }
                Console.WriteLine();
            }
            Console.ReadLine();
          

              
            
            
            
        }
    }
}


using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _3_часть_10_номер
{
    internal class Program
    {
        //3 часть 10 номер
        static void Main(string[] args)
        {
            Random random = new Random();
            Console.Write("Ввести  чётное кол-во строк и столбцов:     ");
            string s = Console.ReadLine();
            int n;
            bool val = int.TryParse(s, out n);

            int[,] mat;
            if (val && (n % 2 == 0))
            {
                mat = new int[n, n];
            }
            else
            {
                Console.WriteLine("введено неправильно");
                return;
            }
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    mat[i, j] = random.Next(-10, 40);
                }
            }
            Console.WriteLine("Вывод исходной матрицы:");
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write("{0:d} ", mat[i, j]);
                }
                Console.WriteLine();
            }
            //по убыванию
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j+=2)
                {
                    int amin = mat[i, j];
                    int fmin = j;
                    for (int f = 0; f < n; f+=2)
                    {
                        if (mat[i,f] < amin)
                        {
                            amin = mat[i,f];
                            fmin = f;
                        }
                    }
                    mat[i, fmin] = mat[i, j];
                    mat[i, j] = amin;
                }
            }
            
            int l = 0;
            do
            {
                for (int j = 1; j < n; j += 2)
                {
                    int amax = mat[l, j];
                    int jmax = j;
                    for (int f = j; f < n; f += 2)
                    {
                        if (mat[l, f] < amax)
                        {
                            amax = mat[l, f];
                            jmax = f;
                        }
                    }
                    mat[l, jmax] = mat[l, j];
                    mat[l, j] = amax;
                }
                l += 1;
            } while (l != n);
            Console.WriteLine("вывод обработанной матрицы");
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < n; j++)
                {
                    Console.Write("{0:d} ", mat[i, j]);
                }
                Console.WriteLine();
            }
            Console.ReadLine();
        }
    }
}
